"0","rad_scale <- function(x, max_rad = 25) {"
"0","  s <- sqrt(x)"
"0","  s / max(s) * max_rad"
"0","}"
"2","Warning messages:
"
"2","1: "
"2","In eval(parse_only(paste(""alist("", quote_label(params), "")""))) :"
"2","
 "
"2"," restarting interrupted promise evaluation
"
"2","2: "
"2","In eval(parse_only(paste(""alist("", quote_label(params), "")""))) :"
"2","
 "
"2"," internal error -3 in R_decompress1
"
"0","map_lbllr <- function(name, rate_10k, cases) {"
"0","  paste("
"0","    htmltools::h5(name),"
"0","    htmltools::div(str_glue(""Rate: {rate_10k} per 10k"")),"
"0","    htmltools::div(str_glue(""{cases} cases""))"
"0","  ) %>%"
"0","    htmltools::htmlEscape()"
"0","}"
"0","map_thresh <- 10"
"0","cases_sf <- cwi::town_sf %>%"
"0","  select(-GEOID) %>%"
"0","  sf::st_transform(4326) %>%"
"0","  # sf::st_centroid() %>%"
"0","  left_join(town %>% filter(date == date_range[2]), by = c(""name"" = ""town"")) %>%"
"0","  left_join(pops %>% select(name, total_pop), by = ""name"") %>%"
"0","  mutate(rate_10k = round(cases / total_pop * 1e4, digits = 1))"
"0",""
"0","bbox <- cwi::town_sf %>%"
"0","  sf::st_transform(4326) %>%"
"0","  sf::st_buffer(1e-2) %>%"
"0","  sf::st_bbox() %>%"
"0","  as.numeric()"
"2","st_buffer does not correctly buffer longitude/latitude data"
"2","dist is assumed to be in decimal degrees (arc_degrees).
"
"0","# color_scale <- colorBin(seq_pal, cases_sf$rate_10k, bins = 5)"
"0",""
"0","leaflet(cases_sf, width = ""100%"", height = 500, "
"0","        options = leafletOptions(zoomSnap = 0.25, zoomDelta = 0.5, scrollWheelZoom = FALSE)) %>%"
"0","  setMaxBounds(bbox[1], bbox[2], bbox[3], bbox[4]) %>%"
"0","  addProviderTiles(providers$CartoDB.Positron) %>%"
"0","  addPolygons(color = ""#999999"", fillColor = ""#aaaaaa"", weight = 1, fillOpacity = 0.1) %>%"
"0","  addCircleMarkers(data = sf::st_centroid(cases_sf),"
"0","                   radius = ~rad_scale(rate_10k), color = seq_pal[5], "
"0","                   weight = 0, opacity = 0.8, fillOpacity = 0.4,"
"0","                   # label = ~str_glue(""{name}: {rate_10k}""),"
"0","                   label = ~str_glue(""{name}: {rate_10k} per 10k ({cases} cases)""),"
"0","                   labelOptions = labelOptions(className = ""tooltip"", direction = ""top"", offset = c(0, -20))) "
"2","st_centroid assumes attributes are constant over geometries of x"
"2","st_centroid does not give correct centroids for longitude/latitude data"
